/* ==========================================================================
    Variables & Base Styles
    ========================================================================== */
   
:root {
  /* Core colors */
  --black: rgb(0, 0, 0);
  --dark: rgb(10, 10, 32);
  --gray: rgb(85, 85, 85);
  --light: rgb(220, 220, 220);
  --light-gray: rgb(175, 175, 175);
  --light-blue: rgb(150, 179, 218);
  
  /* Marker colors */
  --marker-color-red: rgb(223, 24, 64);
  --marker-color-orange: rgb(202, 123, 19);
  --marker-color-yellow: rgb(207, 204, 22);
  --marker-color-green: rgb(27, 204, 80);
  --marker-color-blue: rgb(27, 119, 211);
  --marker-color-purple: rgb(136, 26, 209);
  
  /* Background colors with transparency */
  --background-red: rgba(223, 24, 64, 0.3);
  --background-orange: rgba(202, 123, 19, 0.3);
  --background-yellow: rgba(207, 204, 22, 0.3);
  --background-green: rgba(27, 204, 80, 0.3);
  --background-blue: rgba(27, 119, 211, 0.3);
  --background-purple: rgba(136, 26, 209, 0.3);
  
  /* UI colors */
  --player-card-primary: rgb(34, 48, 65);
  --gradient-red: rgb(107, 33, 49);
  --gradient-dark: var(--dark);
  
  /* Layout variables */
  --spacing-xs: 4px;
  --spacing-sm: 8px;
  --spacing-md: 12px;
  --spacing-lg: 20px;
  --spacing-xl: 40px;
  
  --border-thin: 2px;
  --border-medium: 3px;
  --border-thick: 4px;
  
  --radius-small: 8px;
  --radius-medium: 20px;
  --radius-large: 40px;
  
  --shadow-inset-small: inset 0 0 10px;
  --shadow-inset-medium: inset 0 0 20px 0;
  --shadow-inset-large: inset 0 0 20px 4px;
}

/* Fonts and color palettes */
@font-face {
  font-family: "FoldIt";
  font-style: normal;
  font-weight: 100 900;
  src: url(fonts/Foldit-VariableFont_wght.ttf);
}

@font-palette-values --font-fire {
  font-family: "FoldIt";
  override-colors: 0 rgb(70, 0, 0), 1 rgb(0, 0, 70);
}

@font-palette-values --font-light {
  font-family: "FoldIt";
  override-colors: 0 rgba(220, 220, 220, 0.7), 1 rgb(220, 220, 220);
}

@font-palette-values --font-light-gray {
  font-family: "FoldIt";
  override-colors: 0 rgba(175, 175, 175, 0.7), 1 rgb(175, 175, 175);
}

@font-palette-values --font-gray {
  font-family: "FoldIt";
  override-colors: 0 rgba(90, 90, 90, 0.7), 1 rgb(90, 90, 90);
}

@font-palette-values --font-dark {
  font-family: "FoldIt";
  override-colors: 0 rgba(10, 10, 32, 0.7), 1 rgb(10, 10, 32);
}

@font-palette-values --font-black {
  font-family: "FoldIt";
  override-colors: 0 rgba(0, 0, 0, 0.7), 1 rgb(0, 0, 0);
}

@font-palette-values --font-red {
  font-family: "FoldIt";
  override-colors: 0 rgba(223, 24, 64, 0.6), 1 rgb(223, 24, 64);
}

@font-palette-values --font-orange {
  font-family: "FoldIt";
  override-colors: 0 rgba(202, 123, 19, 0.6), 1 rgb(202, 123, 19);
}

@font-palette-values --font-yellow {
  font-family: "FoldIt";
  override-colors: 0 rgba(207, 204, 22, 0.6), 1 rgb(207, 204, 22);
}

@font-palette-values --font-green {
  font-family: "FoldIt";
  override-colors: 0 rgba(27, 204, 80, 0.6), 1 rgb(27, 204, 80);
}

@font-palette-values --font-blue {
  font-family: "FoldIt";
  override-colors: 0 rgba(27, 119, 211, 0.6), 1 rgb(27, 119, 211);
}

@font-palette-values --font-purple {
  font-family: "FoldIt";
  override-colors: 0 rgba(136, 26, 209, 0.6), 1 rgb(136, 26, 209);
}

*, *::before, *::after {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}

input,
button {
  font-family: inherit;
}

html {
  height: 100%;
  padding: 0;
  margin: 0;
}

body {
  min-height: 100%;
  display: grid;
  grid-template-rows: minmax(min-content, 8%) 1fr minmax(min-content, 5%);
  overflow-x: hidden;
  font-family: "FoldIt";
  font-palette: --font-light;
}

/* ==========================================================================
    Header & Footer
    ========================================================================== */

.header,
.footer {
  background-color: var(--dark);
  font-palette: --font-light;
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 1.2em;
}

/* ==========================================================================
    Main Content Grid
    ========================================================================== */

.content {
  padding: var(--spacing-lg);
  display: grid;
  grid-template-columns: 1fr minmax(250px, 300px) minmax(250px, 300px) 1fr;
  grid-template-rows: minmax(61px, 1fr) minmax(500px, auto) minmax(61px, 1fr);
  align-content: space-between;
  row-gap: 10px;
  perspective: 1000px;
  background: radial-gradient(circle, var(--gradient-dark) 0%, var(--gradient-red) 20%, var(--gradient-dark) 90%);
}

/* ==========================================================================
    Player Info Cards
    ========================================================================== */

.player-info {
  position: relative;
  z-index: 1;
  aspect-ratio: 1 / 2;
  text-align: center;
  padding: var(--spacing-lg);
  border: var(--border-thick) solid var(--light-blue);
  font-palette: --font-light;
  background: var(--player-card-primary);
  box-shadow: var(--shadow-inset-large) var(--dark);
  
  align-self: center;
  display: grid;
  grid-template-rows: auto 1fr;
  gap: var(--spacing-xl);
  transform-style: preserve-3d;
}

#player-one {
  grid-column: 2;
  grid-row: 2;
  transform-origin: left;
  border-right-width: var(--border-thin);
  border-radius: var(--radius-large) 0 0 var(--radius-large);
}

#player-two {
  grid-column: 3;
  grid-row: 2;
  transform-origin: right;
  border-left-width: var(--border-thin);
  border-radius: 0 var(--radius-large) var(--radius-large) 0;
}

#player-one.removed {
  animation: close-left 1s linear forwards;
}

#player-two.removed {
  animation: close-right 1s linear forwards;
}

/* ==========================================================================
    Player Form Elements
    ========================================================================== */

.player-form {
  display: flex;
  flex-direction: column;
  justify-content: space-around;
  gap: var(--spacing-lg);
  backface-visibility: hidden;
}

.player-info h2 {
  backface-visibility: hidden;
  position: relative;
  transition: font-palette 0.3s ease-in-out;
}

#player-one h2 {
  font-palette: --font-red;
  color: var(--marker-color-red);
  --box-shadow: 0 0 16px 4px var(--marker-color-red);
}

#player-two h2 {
  font-palette: --font-blue;
  color: var(--marker-color-blue);
  --box-shadow: 0 0 16px 4px var(--marker-color-blue);
}

.player-info h2::after {
  position: absolute;
  content: "";
  width: 50%;
  bottom: -20px;
  left: 50%;
  transform: translateX(-50%);
  border-bottom-width: var(--border-thick);
  border-bottom-style: solid;
  border-color: inherit;
  box-shadow: var(--box-shadow, none);
  transition: 
    width 0.3s ease-in-out,
    border-color 0.3s ease-in-out,
    box-shadow 0.3s ease-in-out;
}

.player-info.ready h2::after {
  width: calc(100% + 40px);
}

/* Form container and inputs */
.input-container {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: var(--spacing-sm);
  position: relative;
}

.input-container > input[type="text"],
.ready-button {
  width: 50%;
  align-self: center;
}

.player-form input[type="text"] {
  height: 32px;
  padding: 2px 4px;
  text-align: center;
  background-color: var(--light);
  font-palette: --font-dark;
  border: var(--border-thin) solid var(--light);
  box-shadow: var(--shadow-inset-small);
  border-radius: var(--radius-small);
  font-weight: bold;
  font-size: 1em;
}

.player-form input[type="text"]::placeholder {
  font-palette: --font-gray;
}

.player-form input[type="text"]:focus-visible {
  outline: 2px solid var(--light-blue);
  outline-offset: 2px;
}

.input-container > label,
.input-container > span {
  font-size: 1.2em;
  font-weight: 700;
  font-palette: --font-light-gray;
}

.input-container:not(:last-of-type)::after {
  position: absolute;
  content: "";
  width: 200px;
  bottom: -20px;
  border-bottom: 1px solid var(--light-blue);
  border-top: 1px solid var(--light-blue);
  box-shadow: 0 0 10px 2px var(--light-blue);
}

/* ==========================================================================
    Marker Colors & Types
    ========================================================================== */

.marker-colors {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  justify-items: center;
  gap: var(--spacing-md);
}

/* Common styles for marker inputs */
.marker-color,
.marker-type {
  appearance: none;
  position: relative;
  width: 24px;
  height: 24px;
  align-self: center;
  border-style: solid;
  border-width: var(--border-thin);
  border-radius: 50%;
  background-color: var(--dark);
  cursor: pointer;
}

/* Focus state for accessibility */
.marker-color:focus-visible,
.marker-type:focus-visible {
  outline: 2px solid white;
  outline-offset: 2px;
}

.marker-color::after {
  position: absolute;
  content: "";
  width: 60%;
  height: 60%;
  top: 50%;
  left: 50%;
  border-radius: 50%;
  transform: translate(-50%, -50%) scale(0);
  transition: transform 0.3s ease-in-out;
}

.marker-color:checked::after { 
  transform: translate(-50%, -50%) scale(1); 
}

/* Marker color styles - consolidated with attribute selectors */
.marker-color {
  border-color: var(--marker-color-red);
}

[class*="marker-red"] {
  border-color: var(--marker-color-red);
}

.marker-red:checked::after {
  background-color: var(--marker-color-red);
}

[class*="marker-orange"] {
  border-color: var(--marker-color-orange);
}

.marker-orange:checked::after {
  background-color: var(--marker-color-orange);
}

[class*="marker-yellow"] {
  border-color: var(--marker-color-yellow);
}

.marker-yellow:checked::after {
  background-color: var(--marker-color-yellow);
}

[class*="marker-green"] {
  border-color: var(--marker-color-green);
}

.marker-green:checked::after {
  background-color: var(--marker-color-green);
}

[class*="marker-blue"] {
  border-color: var(--marker-color-blue);
}

.marker-blue:checked::after {
  background-color: var(--marker-color-blue);
}

[class*="marker-purple"] {
  border-color: var(--marker-color-purple);
}

.marker-purple:checked::after {
  background-color: var(--marker-color-purple);
}

/* Marker types grid */
.marker-types {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  justify-items: center;
  gap: 24px;
}

.marker-type {
  transition: border-color 0.3s ease-in-out;
}

.option {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-xs);
  position: relative;
  font-weight: 500;
}

.option svg {
  position: absolute;
  content: "";
  width: 16px;
  height: 16px;
  top: 4px;
  left: 4px;
  border-radius: 50%;
  transform: scale(0);
  transition: transform 0.3s ease-in-out;
}

.marker-type:checked ~ svg {
  transform: scale(1);
}

.marker-types .line {
  stroke-width: 32;
  animation: draw 0.15s ease forwards;
  transition: stroke 0.3s ease-in-out;
}

.marker-types .circle {
  stroke-width: 32;
  transition: stroke 0.3s ease-in-out;
  animation: draw 0.3s ease forwards;
}

#player-one .marker-type {
  border-color: var(--marker-color-red);
}

#player-two .marker-type {
  border-color: var(--marker-color-blue);
}

/* Ready button */
.ready-button {
  height: 32px;
  border-radius: var(--radius-small);
  border: var(--border-medium) solid var(--marker-color-blue);
  background-color: var(--black);
  font-palette: --font-light;
  font-weight: bold;
  cursor: pointer;
  transition: 
    background-color 0.3s ease-in-out, 
    color 0.3s ease-in-out,
    box-shadow 0.3s ease-in-out,
    border-color 0.3s ease-in-out;
}

.ready-button:hover {
  background-color: var(--light);
  font-palette: --font-black;
}

.ready-button:focus-visible {
  outline: 2px solid white;
  outline-offset: 2px;
}

#player-one .ready-button {
  border-color: var(--marker-color-red);
  box-shadow: 0 0 12px 3px var(--marker-color-red);
}

#player-two .ready-button {
  border-color: var(--marker-color-blue);
  box-shadow: 0 0 12px 3px var(--marker-color-blue);
}

/* ==========================================================================
    Scoreboard & Instructions
    ========================================================================== */

.scoreboard {
  grid-column: 2 / 4;
  grid-row: 1;
}

.instructions {
  grid-column: 2 / 4;
  grid-row: 3;
  align-self: end;
}

.scoreboard,
.instructions {
  display: flex;
  justify-content: space-evenly;
  align-self: center;
  align-items: center;
  max-height: 90px;
  height: 70%;
  text-align: center;
  font-size: 1.8em;
  font-weight: bold;
  font-palette: --font-light;
  box-shadow: var(--shadow-inset-medium) var(--dark);
  border: var(--border-thick) solid var(--light-blue);
  background-color: var(--player-card-primary);
  border-radius: var(--radius-medium);
  padding: 10px;
  transform: scaleY(0);
  transform-origin: center;
  opacity: 0;
  transition: 
    transform 1s ease-in-out,
    opacity 1s ease-in-out;
}

.scoreboard.visible,
.instructions.visible {
  transform: scaleY(1);
  opacity: 1;
}

.scoreboard > *,
.instructions > * {
  height: max-content;
}

.versus,
.player-score {
  font-size: 1.2em;
  font-weight: 800;
}

/* ==========================================================================
    Game Board
    ========================================================================== */

.gameboard {
  grid-column: 2 / 4;
  grid-row: 2;
  padding: var(--spacing-lg);
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(3, 1fr);
  justify-content: center;
  align-content: center;
  align-self: center;
  aspect-ratio: 1 / 1;
  background-color: var(--player-card-primary);
  border: var(--border-thick) solid var(--light-blue);
  border-radius: var(--radius-large);
  box-shadow: var(--shadow-inset-medium) var(--dark);
}

.cell {
  position: relative;
  background: var(--light-gray);
  border: var(--border-thin) solid var(--dark);
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: var(--shadow-inset-medium) var(--dark);
}

/* Cell border radius for corners */
.cell[data-row="0"][data-column="0"] {
  border-radius: var(--radius-medium) 0 0 0;
}

.cell[data-row="0"][data-column="2"] {
  border-radius: 0 var(--radius-medium) 0 0;
}

.cell[data-row="2"][data-column="0"] {
  border-radius: 0 0 0 var(--radius-medium);
}

.cell[data-row="2"][data-column="2"] {
  border-radius: 0 0 var(--radius-medium) 0;
}

/* Cell border thickness for outer edges */
.cell[data-row="0"] {
  border-top-width: var(--border-thick);
}

.cell[data-row="2"] {
  border-bottom-width: var(--border-thick);
}

.cell[data-column="0"] {
  border-left-width: var(--border-thick);
}

.cell[data-column="2"] {
  border-right-width: var(--border-thick);
}

.cell > svg {
  width: 70%;
  height: 70%;
}

/* SVG animations */
.line {
  stroke-width: 12;
  stroke-dasharray: 140;
  stroke-dashoffset: 130;
  animation: draw 0.3s ease forwards;
}

.circle {
  stroke-width: 12;
  fill: none;
  stroke-dasharray: 314;
  stroke-dashoffset: 314;
  animation: draw 0.6s ease forwards;
}

/* ==========================================================================
    Animations
    ========================================================================== */

@keyframes draw {
  to {
    stroke-dashoffset: 0;
  }
}

@keyframes close-left {
  0% {
  }
  
  30% {
    transform: rotateY(-120deg);
  }
  
  60% {
    transform: rotateY(-240deg);
    z-index: -1;
  }

  100% {
    transform: rotateY(-360deg);
    z-index: -1;
    display: none;
  }
}

@keyframes close-right {
  0% {
  }
  
  30% {
    transform: rotateY(120deg);
  }
  
  60% {
    transform: rotateY(240deg);
    z-index: -1;
  }

  100% {
    transform: rotateY(360deg);
    z-index: -1;
    display: none;
  }
}